name: notify-queue-e2e
concurrency:
  group: notify-tests
  cancel-in-progress: true

on:
  push:
    paths:
      - "libs/**"
      - "services/notify_queue/**"
      - "services/go.work"
      - "services/go.work.sum"
      - "services/.gitignore"
      - "services/Makefile"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v3
      - name: Print dir
        run: ls
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Download Go modules
        run: |
          go mod download
          make download-libs
          make download-notify
          sudo make install-lint
      - name: Run unit tests
        run: |
          make test-middlewares
          make test-queue
          make test-utils
          make test-notify
      - name: Run lint
        run: make lint-notify

  e2e-local-sandbox:
    runs-on: ubuntu-latest
    needs: unit-test
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v3
      - name: Print dir
        run: ls
      - name: Update ubuntu
        run: sudo apt-get -qq update
      - name: Install curl, jq, make, zip, ping, net-tools
        run:  sudo apt-get -qq -y install curl jq build-essential zip iputils-ping net-tools
      - name: Install docker-compose
        run: make install-docker-compose
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Download Go modules
        run: |
          go mod download
          make download-libs
          make download-notify
          sudo make install-lint
      - name: Install and start azurite
        id: azuright
        uses: potatoqualitee/azuright@v1.1
      - name: Install azure func
        run: sudo apt-get install azure-functions-core-tools-4
      - name: Start azure func
        run: make func-start-notify &
      - name: make curl to enqueue subscription
        run: |
          curl --location --request POST 'http://localhost:7071/api/notify' \
          --header 'Content-Type: application/json' \
          --data-raw '
          {
              "endpoint": "http://localhost:3000",
              "message": "your order has been received",
              "expiration_time": "1657034161512",
              "keys": {
                  "auth": "123",
                  "p256dh": "abc"
              }
          }'
